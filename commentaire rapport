Rapport de Thomas Eguienta et Azeddine Assaghir

Projet Info4A variante J 2020







1) Fonction et structure importantes :

A) particularité du bloc

Un bloc est composé des attributs nord, est, ouest et sud qui correspondent aux lettres qui composent le bloc

On a ajouté l'attribut cote qui est un tableau de taille 4 qui représente les interactions avec les blocs aux alentours du bloc dans le plateau. Il est rempli par la méthode verifRound(p) qui est une méthode qui vérifie les alentours du bloc et remplit son tableau cote en conséquence.

L'ordre du tableau est NESO. S'il y a un 1 dans la case N, cela signifie que le bloc n'a pas la même lettre au nord que le bloc au-dessus de lui au sud.





B) méthode joueur :

joueur est une méthode qui représente l'utilisateur qui tente de résoudre le puzzle. L'utilisateur voit le dessin et voit le nombre d'erreur à résoudre. Il a deux façons de faire pour résoudre ces erreurs, échanger deux blocs en appuyant sur 1 ou pivoter un bloc en appuyant sur 2. Si l'utilisateur appuie sur autre chose que 1 ou 2, le programme ne fait rien, indique à l'utilisateur qu'il s'est trompé et redemande de donner 1 ou 2.

Si le joueur rentre 1, le programme lui demande de choisir les blocs à échanger sous la forme a1a2 tel que a1 est le premier bloc et a2 le deuxième, si l'utilisateur ne fait pas ça, erreur. S'il le fait les deux blocs sont échangés de place puis on revient à l'étape du début.

Si le joueur rentre 2, le programme lui demande de choisir un bloc a échanger sous la forme a1 comme pour échanger, erreur si ce n'est pas bon, sinon ça demande à l'utilisateur combien de quart de tours sur la droite à faire, sachant que 4 revient a ne rien changer.

Ce programme s'arrête lorsque l'utilisateur parvient à retrouver le dessin avec 0 faute.



C) méthode ordi :

ordi est une méthode qui représente l'IA. Le but d'ordi est de résoudre le plateau pour qu'il n'y ait plus de faute. Pour ce faire, le programme dans un premier lieu cherche à résoudre la première erreur qu'il rencontre, pour la résoudre, il parcourt le plateau à la recherche d'un bloc qui pourrait enlever cette erreur et dans le meilleur des cas ne pas créer de nouvelle erreur. S'il le trouve, on échange ces deux blocs et on regarde le nombre de fautes dans le plateau. Si le nombre de fautes ne change pas, on opte plutôt pour pivoter le bloc qu'on voulait échanger au départ. On repart ensuite sur des swaps. On répète cette méthode jusqu'a qu'il n'y a plus d'erreur dans le plateau.

Voilà l’idée derrière la méthode ordi qui représente l’IA mais d’après nos tests, ça ne résout pas réellement le plateau, le minimum de fautes qu’on a réussi à avoir est 12 environ sur un plateau 4x4.

D) méthode recupErreur :

La méthode verifBloc est une méthode qui vérifie si deux blocs ont la même lettre dans un coté donné (ex : droite pour premier bloc et gauche pour l’autre). Pour que l’IA puisse utiliser cette méthode par lui-même sans faire de vérifications sur des blocs qui ne sont pas connectés, on utilise la méthode recupErreur qui renvoie le coté en commun entre les deux blocs mis en paramètre par leurs coordonnées. On recupere le coté en comparant la position du deuxième bloc avec le premier. Pour lancer recupErreur, il faut savoir qu’il y a une erreur, et on le sait grâce au tableau de cote du bloc.






 2) Probleme :

  a) ia marche pas
